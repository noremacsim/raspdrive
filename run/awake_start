#!/bin/bash -eu

if [[ ( ( ! -x /root/bin/tesla_api.py) || ( ! -s /mutable/cache.json ) ) && ( -z "${TESLAFI_API_TOKEN:+x}" ) ]]
then
  log "Not keeping car awake."
  exit
fi

function ping {
  while true
  do
    if [[ ( -n "${TESLA_REFRESH_TOKEN:+x}" ) ]]
    # Use Tesla API to keep car awake
    then
      if /root/bin/tesla_api.py streaming_ping
      then
        sleep 90
      else
        log "Failed to contact car using Tesla API, retrying in 5s..."
        sleep 5
      fi
    fi

    if [[ ( -n "${TESLAFI_API_TOKEN:+x}" ) ]]
    # Use TeslaFi API to keep car awake.
    then
      curl -s -H "Authorization: Bearer $TESLAFI_API_TOKEN" "https://www.teslafi.com/feed.php?command=wake_up"
      # No need to contact TeslaFi too often to prevent API lockout (max 3 calls/min).
      sleep 600
    fi    
  done
}

case "${TESLA_WAKE_MODE:-stream}" in
  sentry)
    is_sentry_mode_enabled=$(/root/bin/tesla_api.py is_sentry_mode_enabled | tr '[:upper:]' '[:lower:]')
    if [ "false" = "${is_sentry_mode_enabled}" ]
    then
      log "Temporarily enabling Sentry Mode to keep car awake."
      touch /tmp/disable_sentry_after_archiving
      /root/bin/tesla_api.py enable_sentry_mode &>> "${LOG_FILE}"
    fi
    ;;
  stream)
    log "Starting background task to keep car awake."
    ping &
    echo $! > /tmp/keep_awake_task_pid
    ;;
  *)
    log "Unknown TESLA_WAKE_MODE: ${TESLA_WAKE_MODE}."
    ;;
esac
